#!@PERL@
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
use 5.10.1;
use strict;
use warnings;

use lib "@LOCAL_LIB_PATH@";
use lib "@RT_LIB_PATH@";

use RT::Interface::CLI qw(Init);
Init();

use RT::Transactions;
my $txns = RT::Transactions->new( RT->SystemUser );
$txns->Limit(
    FIELD => 'ObjectType',
    OPERATOR => '=',
    VALUE => 'RT::Group',
    QUOTEVALUE => 1,
    ENTRYAGGREGATOR => 'AND',
);

my $alias = $txns->Join(
    TYPE   => 'LEFT',
    FIELD1 => 'ObjectId',
    TABLE2 => 'Groups',
    FIELD2 => 'Id',
);
$txns->Limit(
    ALIAS => $alias,
    FIELD => 'Domain',
    OPERATOR => '=',
    VALUE => 'ACLEquivalence',
    CASESENSITIVE => 0,
    QUOTEVALUE => 1,
    ENTRYAGGREGATOR => 'AND',
);

$txns->Limit(
    ALIAS => $alias,
    FIELD => 'Name',
    OPERATOR => '=',
    VALUE => 'UserEquiv',
    QUOTEVALUE => 1,
    CASESENSITIVE => 0,
    ENTRYAGGREGATOR => 'AND',
);

my $total = $txns->Count;
my $i = 0;

FetchNext( $txns, 'init' );
while ( my $rec = FetchNext( $txns ) ) {
    $i++;
    printf("\r%0.2f %%", 100 * $i / $total);
    $RT::Handle->BeginTransaction;
    my ($status) = $rec->Delete;
    unless ($status) {
        $RT::Logger->error( "Couldn't delete TXN #". $rec->id );
        exit 1;
    }
    $RT::Handle->Commit;
}

use constant PAGE_SIZE => 10000;
sub FetchNext {
    my ($objs, $init) = @_;
    if ( $init ) {
        $objs->RowsPerPage( PAGE_SIZE );
        $objs->FirstPage;
        return;
    }

    my $obj = $objs->Next;
    return $obj if $obj;
    $objs->RedoSearch;
    $objs->FirstPage;
    return $objs->Next;
}

