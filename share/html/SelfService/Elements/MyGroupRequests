%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2023 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, title => $title &>
<& /Elements/CollectionList, Title   => $title,
  Format  => $Format,
  Query   => $Query,
  Order   => \@Order,
  OrderBy => \@OrderBy,
  BaseURL => $BaseURL,
  AllowSorting => 1,
  Class   => 'RT::Tickets',
  Rows    => $Rows,
  Page    => $Page &>
</&>

<%INIT>

unless ( RT->Config->Get('SelfServiceShowGroupTickets')
         and $session{'CurrentUser'}->HasRight(Right => 'SeeSelfServiceGroupTicket', Object => $RT::System) ){
    return;
}

$title ||= loc("My [_1] tickets", $friendly_status);

# Load a system user to see all groups without a rights check on whether
# the current user has ShowGroup.
my $user = RT::User->new(RT->SystemUser);
my ($ret, $msg) = $user->Load($session{'CurrentUser'}->Id);
unless ( $ret ){
    RT::Logger->error("Unable to load user record for user: " . $session{'CurrentUser'}->Name . " :$msg");
    return;
}
my $groups_obj = $user->OwnGroups;

my $Query = '';

if ( $groups_obj->Count ){
    my $group = $groups_obj->Next;

    # Confirm we got a group. Count can report available groups, but
    # if the current user doesn't have SeeGroup, it won't be loaded.
    if ( $group ){
        $Query = "(( Watcher = " . $group->Id . " )";
    }

    # Handle multiple groups
    while ( $group = $groups_obj->Next ){
        $Query .= " OR ( Watcher = " . $group->Id . " )";
    }

    $Query .= ")" if $Query;
}

# Exclude tickets where current user is requestor or cc since they will
# appear in the My open tickets list
$Query .= " AND" if $Query;
$Query .= " $SortByRole.id != " . $session{'CurrentUser'}->Id;

if ($status) {
    $status =~ s/(['\\])/\\$1/g;
    $Query .= " AND Status = '$status'";
}

my $Format = RT->Config->Get('DefaultSelfServiceSearchResultFormat');

$m->callback( CallbackName => 'ModifyQuery', ARGSRef => \%ARGS, Query => \$Query, Page => \$Page,
    Rows => \$Rows, Order => \@Order, OrderBy => \@OrderBy, Format => \$Format );

</%INIT>
<%ARGS>
$title => undef
$friendly_status => loc("group's")
$status => undef
$BaseURL => undef
$Page => 1
@Order => ('ASC')
@OrderBy => ('Created')
$Rows => 50
$SortByRole => 'Requestor' # Role to use when determining "My" tickets
</%ARGS>
