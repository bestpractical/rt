%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2025 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%INIT>
my ($component_name) = $m->dhandler_arg;

my $path;
if ( $m->comp_exists("/Ticket/$component_name") ) {
    $path = "/Ticket/$component_name";
}
elsif ( $m->comp_exists("/Ticket/Elements/$component_name") ) {
    $path = "/Ticket/Elements/$component_name";
}
else {
    RT->Logger->warning( "Component $component_name does not exist" );
    Abort( loc('Invalid Path'), SuppressHeader => 1 );
}

my $comp = LoadComponent($path);
unless ( $comp->attr_if_exists('directly_accessible') ) {
    RT->Logger->warning("To load $path in views, it needs to have attr 'directly_accessible' set to 1");
    Abort( loc('Invalid Path'), SuppressHeader => 1 );
}

my %extra_args;
if ( $component_name =~ m{/Create/} ) {
    return unless $Queue;
    my $queue = RT::Queue->new( $session{CurrentUser} );
    $queue->Load($Queue);
    return unless $queue->Id;

    unless ( $queue->CurrentUserHasRight('CreateTicket') ) {
        Abort( loc('Permission Denied'), SuppressHeader => 1, Code => HTTP::Status::HTTP_FORBIDDEN );
    }
    $extra_args{QueueObj} = $queue;
}
else {
    return unless $id;
    my $ticket = RT::Ticket->new( $session{CurrentUser} );
    $ticket->Load($id);
    return unless $ticket->Id;

    unless ( $ticket->CurrentUserCanSee ) {
        Abort( loc('Permission Denied'), SuppressHeader => 1, Code => HTTP::Status::HTTP_FORBIDDEN );
    }
    $extra_args{Ticket} = $extra_args{TicketObj} = $ticket;
}

my $out;
eval { $out = $m->scomp( $path, %ARGS, %extra_args ) };
if ($@) {
    RT->Logger->warning("Error loading $component_name: $@");
    Abort( loc('Error'), SuppressHeader => 1 );
}
else {
    $m->out($out);
}
</%INIT>

<%ARGS>
$id => undef
$Queue => undef
</%ARGS>
