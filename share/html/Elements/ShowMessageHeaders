%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% if ( @headers ) {
<table>
% foreach my $header (@headers) {
  <tr>
    <td align="right" class="message-header-key"><% $header->{'Tag'} %>:</td>
    <td class="message-header-value <% join(' ', map {CSSClass($_)} @{$header->{Classes} || []}) %>">
      <% $header->{'Value'} | n %></td>
  </tr>
% }
</table>
% $m->callback( CallbackName => 'AfterHeaders', message => $Message );
% }
<%INIT>
my @headers;
foreach my $field( RT->Config->Get('ShowBccHeader')? $Message->_SplitHeaders : $Message->SplitHeaders ) {
    my ($tag, $value) = split /:/, $field, 2;
    next unless $tag && $value;
    push @headers, { Tag => $tag, Value => $value };
}

my %display_headers = map { lc($_) => 1 } @DisplayHeaders;

$m->callback(
    message         => $Message,
    headers         => \@headers,
    display_headers => \%display_headers,
);

unless ( $display_headers{'_all'} ) {
    @headers = grep $display_headers{ lc $_->{'Tag'} }, @headers;
}

my $object = $Message->TransactionObj->Object;
foreach my $f (@headers) {
    $m->comp('/Elements/MakeClicky', content => \$f->{'Value'}, object => $object, %ARGS);
}

unshift @headers, $m->comp( 'CryptStatus', Message => $Message, WarnUnsigned => $WarnUnsigned );

$m->callback(
    CallbackName => 'BeforeLocalization',
    headers      => \@headers,
);

if ( $Localize ) {
    $_->{'Tag'} = loc($_->{'Tag'}) foreach @headers;
}
</%INIT>
<%ARGS>
$WarnUnsigned => 0
$Message => undef
$Localize => 1
@DisplayHeaders => ('_all')
</%ARGS>
