%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$Format
</%ARGS>

<%init>
use Regexp::Common qw/delimited/;
my @Columns;

while ($Format =~ /($RE{delimited}{-delim=>qq{\'"}}|[{}\w.]+)/go) {
    my $col = $1;
    my $colref = { original_string => $col };

    if ($col =~ /^$RE{quoted}$/o) {
        substr($col,0,1) = "";
        substr($col,-1,1) = "";
        $col =~ s/\\(.)/$1/g;
    }

    $m->callback(CallbackName => 'PreColumn', Column => $colref, col => \$col);

    while ( $col =~ s{/(STYLE|CLASS|TITLE|ALIGN|SPAN|ATTRIBUTE):([^/]*)}{}i ) {
        $colref->{ lc $1 } = $2;
    }
    $colref->{'last_attribute'} = $colref->{'attribute'};

    unless ( length $col ) {
        $colref->{'output'} = [];
        $colref->{'last_attribute'} = $colref->{'attribute'} = ''
            unless defined $colref->{'attribute'};
    }
    elsif ( $col =~ /^__(NEWLINE|NBSP)__$/ || $col =~ /^(NEWLINE|NBSP)$/ ) {
        $colref->{'title'} = $1;
        $colref->{'last_attribute'} = '';
    }
    elsif ( $col =~ /__(.*?)__/io ) {
        my @subcols;
        while ( $col =~ s/^(.*?)__(.*?)__//o ) {
            push ( @subcols, $1 ) if $1;
            push ( @subcols, "__$2__" );
            $colref->{'last_attribute'} = $2;
        }
        push @subcols, $col;
        $colref->{'output'} = \@subcols;
        $colref->{'attribute'} = $colref->{'last_attribute'}
            unless defined $colref->{'attribute'};
    }
    else {
        $colref->{'output'} = [ "__" . $col . "__" ];
        $colref->{'last_attribute'} = $col;
        $colref->{'attribute'} = $col
            unless defined $colref->{'attribute'};
    }
    
    $m->callback(CallbackName => 'PostColumn', Column => $colref, col => \$col);

    push @Columns, $colref;
}

$m->callback(CallbackName => 'PostProcess', Columns => \@Columns, Format => $Format);

return(@Columns);
</%init>
