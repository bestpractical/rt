%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2011 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% $m->callback( ARGSRef => \%ARGS, CallbackName => 'BeforeTable' );
<table class="myrt">
<tr valign="top">

<td class="boxcontainer">
% $show_cb->($_) foreach @$body;
</td>

% if ( $summary ) {
<td class="boxcontainer">
% $show_cb->($_) foreach @$summary;
</td>
% }

</tr></table>
% $m->callback( ARGSRef => \%ARGS, CallbackName => 'AfterTable' );
<%INIT>

# XXX: we don't use this, but should.
my %allowed_components = map {$_ => 1} @{RT->Config->Get('HomepageComponents')};

my $user = $session{'CurrentUser'}->UserObj;
$Portlets ||= $session{'my_rt_portlets'};
unless ( $Portlets ) {
    my ($default_portlets) = RT::System->new($session{'CurrentUser'})->Attributes->Named('HomepageSettings');
    $Portlets = $session{'my_rt_portlets'} = $user->Preferences(
        HomepageSettings => $default_portlets? $default_portlets->Content: {},
    );
}

$m->callback( CallbackName => 'MassagePortlets', Portlets => $Portlets );

my ($body, $summary) = @{$Portlets}{qw(body summary)};
unless( $body && @$body ) {
    $body = $summary || [];
    $summary = undef;
}
$summary = undef unless $summary && @$summary;

my $Rows = $user->Preferences( 'SummaryRows', ( RT->Config->Get('DefaultSummaryRows') || 10 ) );

my $show_cb = sub {
    my $entry = shift;
    my $type  = $entry->{type};
    my $name = $entry->{'name'};
    if ( $type eq 'component' ) {
        # XXX: security check etc.
        $m->comp( $name, %{ $entry->{arguments} || {} } );
    } elsif ( $type eq 'system' ) {
        $m->comp( '/Elements/ShowSearch', Name => $name, Override => { Rows => $Rows } );
    } elsif ( $type eq 'saved' ) {
        $m->comp( '/Elements/ShowSearch', SavedSearch => $name, Override => { Rows => $Rows }, IgnoreMissing => 1 );
    } else {
        $RT::Logger->error("unknown portlet type '$type'");
    }
};

</%INIT>
<%ARGS>
$Portlets => undef
</%ARGS>
