%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$Name
$Attr => undef
$GenericMap => {}
</%ARGS>
<%ONCE>
my $COLUMN_MAP = {
    Name => {
        title     => 'Name', # loc
        attribute => 'Name',
        value     => sub { return $_[0]->Name() },
    },
    RealName => {
        title     => 'Real Name', # loc
        attribute => 'RealName',
        value     => sub { return $_[0]->RealName() },
    },
    NickName => {
        title     => 'Nickname', # loc
        attribute => 'NickName',
        value     => sub { return $_[0]->NickName() },
    },
    EmailAddress => {
        title     => 'Email Address', # loc
        attribute => 'EmailAddress',
        value     => sub { return $_[0]->EmailAddress() },
    },
    Organization => {
        title     => 'Organization', # loc
        attribute => 'Organization',
        value     => sub { return $_[0]->Organization() },
    },
    HomePhone => {
        title     => 'Home Phone', # loc
        attribute => 'HomePhone',
        value     => sub { return $_[0]->HomePhone() },
    },
    WorkPhone => {
        title     => 'Work Phone', # loc
        attribute => 'WorkPhone',
        value     => sub { return $_[0]->WorkPhone() },
    },
    MobilePhone => {
        title     => 'Mobile Phone', # loc
        attribute => 'MobilePhone',
        value     => sub { return $_[0]->MobilePhone() },
    },
    PagerPhone => {
        title     => 'Pager Phone', # loc
        attribute => 'PagerPhone',
        value     => sub { return $_[0]->PagerPhone() },
    },
    Address1 => {
        title     => 'Address', # loc
        attribute => 'Address1',
        value     => sub { return $_[0]->Address1() },
    },
    Address2 => {
        title     => 'Address 2', # loc
        attribute => 'Address2',
        value     => sub { return $_[0]->Address2() },
    },
    City => {
        title     => 'City', # loc
        attribute => 'City',
        value     => sub { return $_[0]->City() },
    },
    State => {
        title     => 'State', # loc
        attribute => 'State',
        value     => sub { return $_[0]->State() },
    },
    Zip => {
        title     => 'Zip', # loc
        attribute => 'Zip',
        value     => sub { return $_[0]->Zip() },
    },
    Country => {
        title     => 'Country', # loc
        attribute => 'Country',
        value     => sub { return $_[0]->Country() },
    },
    Gecos => {
        title       => 'Unix login', #loc
        attribute   => 'Gecos',
        value       => sub { return $_[0]->Gecos() },
    },
    Lang => {
        title       => 'Language', #loc
        attribute   => 'Lang',
        value       => sub { return $_[0]->Lang() },
    },
    FreeformContactInfo => {
        title       => 'Extra Info', #loc
        attribute   => 'FreeformContactInfo',
        value       => sub { return $_[0]->FreeformContactInfo() },
    },
    Disabled => {
        title     => 'Status', # loc
        value     => sub { return $_[0]->Disabled? $_[0]->loc('Disabled'): $_[0]->loc('Enabled') },
    },
};

</%ONCE>
<%INIT>
$m->callback( GenericMap => $GenericMap, COLUMN_MAP => $COLUMN_MAP, CallbackName => 'ColumnMap', CallbackOnce => 1 );
return GetColumnMapEntry( Map => $COLUMN_MAP, Name => $Name, Attribute => $Attr );
</%INIT>
