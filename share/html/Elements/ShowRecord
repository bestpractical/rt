%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%args>
$Object
$Format
$TrustFormat => 0
$Class       => ""
</%args>
<%init>
$Format = ScrubHTML($Format) unless $TrustFormat;

my @columns = $m->comp('/Elements/CollectionAsTable/ParseFormat', Format => $Format);

my $fetch_columnmap = sub {
    my ($name, $attr, $arguments, $no_escape) = @_;
    my $tmp = $m->comp(
        '/Elements/ColumnMap',
        Class => $Object->ColumnMapClassName,
        Name  => $name,
        Attr  => $attr,
    );
    return ProcessColumnMapValue( $tmp, Arguments => $arguments, Escape => !$no_escape );
};
</%init>
<div class="record <% CSSClass($Class) %> <% CSSClass(blessed($Object)) %>">
<%perl>
for my $column (@columns) {
    my $title = $m->interp->apply_escapes($column->{title} || '', 'h');
    my $attr  = $column->{'attribute'} || $column->{'last_attribute'};

    unless (defined $column->{title}) {
        # No format-supplied title, so use the one from the column map as-is.  It's
        # trustworthy.
        $title = $fetch_columnmap->($attr,'title',[$attr]);
    }
</%perl>
<div class="record-field <% $Class ? CSSClass("$Class-field") : "" %> <% CSSClass($fetch_columnmap->($attr,'attribute',[$attr],'no_escape')) %>">
<span class="label"><% loc($title) |n %></span>
<%perl>
    my @out;
    foreach my $subcol ( @{ $column->{output} } ) {
        my ($col) = ($subcol =~ /^__(.*?)__$/);
        unless ( $col ) {
            push @out, $subcol;
            next;
        }
        push @out, $fetch_columnmap->($col, 'value', [$Object]);
    }
    @out = grep { defined $_ and length $_ } @out;
</%perl>
<span class="value"><% join('',@out) |n %></span>
% $m->callback(CallbackName => 'AfterValue', Object => $Object, attribute => $attr, column => $column );
</div>
% }
</div>
