%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$Name
$Attr => undef
</%ARGS>
<%ONCE>
my $COLUMN_MAP = {
    ObjectType => {
        title     => 'Object Type', # loc
        attribute => 'ObjectType',
        value     => sub { return $_[0]->ObjectType() },
    },
    ObjectId => {
        title     => 'Object Id', # loc
        attribute => 'ObjectId',
        value     => sub { return $_[0]->ObjectId() },
    },
    Type => {
        title     => 'Type', # loc
        attribute => 'Type',
        value     => sub { return $_[0]->Type() },
    },
    Field => {
        title     => 'Field', # loc
        attribute => 'Field',
        value     => sub { return $_[0]->Field() },
    },
    OldValue => {
        title     => 'Old Value', # loc
        attribute => 'OldValue',
        value     => sub { return $_[0]->OldValue() },
    },
    NewValue => {
        title     => 'New Value', # loc
        attribute => 'NewValue',
        value     => sub { return $_[0]->NewValue() },
    },
    TimeTaken => {
        title     => 'Time Taken', # loc
        attribute => 'TimeTaken',
        value     => sub { return $_[0]->TimeTaken() },
    },
    Description => {
        title     => 'Description', # loc
        value     => sub { my $html = $_[0]->BriefDescriptionAsHTML(); return \$html },
    },
    ObjectName => {
        title     => 'Name', # loc
        value     => sub {
            # Since ->can() is unreliable (due to AUTOLOAD), use
            # _Accessible to check for methods
            my $object = $_[0]->Object;
            if ( $object->_Accessible('Name','read') ) {
                return $object->Name;
            } elsif ( $object->_Accessible('Subject','read') ) {
                return $object->Subject;
            } else {
                return loc('No Name');
            }
        },
    },
};


</%ONCE>
<%INIT>
$m->callback( COLUMN_MAP => $COLUMN_MAP, CallbackName => 'ColumnMap', CallbackOnce => 1 );
return GetColumnMapEntry( Map => $COLUMN_MAP, Name => $Name, Attribute => $Attr );
</%INIT>
