%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2025 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<table width="100%">
<tr>
<td valign="top">

<h3><&|/l&>New watchers</&></h3>
<&|/l&>Find people whose</&><br />
<& /Elements/SelectUsers &>
<input type="submit" class="button" name="OnlySearchForPeople" value="<&|/l&>Go!</&>" />
<br />
<&|/l&>Find groups whose</&><br />
<& /Elements/SelectGroups &>
<input type="submit" class="button" name="OnlySearchForGroup" value="<&|/l&>Go!</&>" />

<& AddWatchers, Ticket => $Ticket, UserString => $UserString,
        UserOp => $UserOp, UserField => $UserField,
        GroupString => $GroupString, GroupOp => $GroupOp,
        GroupField => $GroupField, PrivilegedOnly => $PrivilegedOnly &> 
</td><td valign="top">
<h3><&|/l&>People</&></h3>
<table>

<tr>
  <td class="label"><&|/l&>Owner</&>:</td>
  <td class="value"><& /Elements/SelectOwner, Name => 'Owner', QueueObj => $Ticket->QueueObj, TicketObj => $Ticket, Default => $Ticket->OwnerObj->Id, DefaultValue => 0&></td>
</tr>

% my @role_fields;
% my $single_roles = $Ticket->QueueObj->CustomRoles;
% $single_roles->LimitToSingleValue;
% $m->callback( CustomRoles => $single_roles, SingleRoles => 1, Ticket => $Ticket, %ARGS, CallbackName => 'ModifyCustomRoles' );
% while (my $role = $single_roles->Next) {
<tr>
  <td class="label"><% $role->Name %>:</td>
  <td class="value"><& /Elements/SingleUserRoleInput, role => $role, Ticket => $Ticket &></td>
</tr>

% }

</table>

<h3><&|/l&>Current watchers</&></h3>
<i><&|/l&>(Check box to delete)</&></i><br />

<table>

<tr>
  <td class="label">
    <input type="checkbox" class="checkbox" onclick="setCheckbox(this, /^Ticket-DeleteWatcher-Type-Requestor-/)">
    <&|/l&>Requestors</&>:</td>
  <td class="value"><& EditWatchers, TicketObj => $Ticket, Watchers => $Ticket->Requestors &></td>
</tr>

<tr>
  <td class="label">
    <input type="checkbox" class="checkbox" onclick="setCheckbox(this, /^Ticket-DeleteWatcher-Type-Cc-/)">
    <&|/l&>Cc</&>:</td>
  <td class="value"><& EditWatchers, TicketObj => $Ticket, Watchers => $Ticket->Cc &></td>
</tr>

<tr>
  <td class="label">
    <input type="checkbox" class="checkbox" onclick="setCheckbox(this, /^Ticket-DeleteWatcher-Type-AdminCc-/)">
    <&|/l&>Admin Cc</&>:</td>
  <td class="value"><& EditWatchers, TicketObj => $Ticket, Watchers => $Ticket->AdminCc &></td>
</tr>

% my $multi_roles = $Ticket->QueueObj->CustomRoles;
% $multi_roles->LimitToMultipleValue;
% $m->callback( CustomRoles => $multi_roles, SingleRoles => 0, Ticket => $Ticket, %ARGS, CallbackName => 'ModifyCustomRoles' );
% while (my $role = $multi_roles->Next) {
% my $group = $Ticket->RoleGroup($role->GroupType);
<tr>
  <td class="label">
    <input type="checkbox" class="checkbox" onclick="setCheckbox(this, /^Ticket-DeleteWatcher-Type-RT::CustomRole-<% $role->Id %>-/)">
    <% $role->Name %>:</td>
  <td class="value"><& EditWatchers, TicketObj => $Ticket, Watchers => $group &></td>
</tr>
% }

<& /Elements/EditCustomFields, Object => $Ticket, Grouping => 'People', InTable => 1 &>

</table>

</td>
</tr>
</table>

<%ARGS>
$UserField => undef
$UserOp => undef
$UserString => undef
$GroupField => undef
$GroupOp => undef
$GroupString => undef
$PrivilegedOnly => undef
$Ticket => undef
</%ARGS>
