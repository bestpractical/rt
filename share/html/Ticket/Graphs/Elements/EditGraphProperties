%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, title => loc('Graph Properties') &>

<% loc('Direction') %> <select name="Direction">
<option value="TB" <% ($Direction||'TB') eq 'TB'? 'selected="selected"': '' |n %>><% loc('top to bottom') %></option>
<option value="LR" <% ($Direction||'TB') eq 'LR'? 'selected="selected"': '' |n %>><% loc('left to right') %></option>
%# XXX: not supported by GraphViz perl module
%#<option value="BT" <% ($Direction||'TB') eq 'BT'? 'selected="selected"': '' |n %>><% loc('bottom to top') %></option>
%#<option value="RL" <% ($Direction||'TB') eq 'RL'? 'selected="selected"': '' |n %>><% loc('right to left') %></option>
</select><br />

<% loc('Main type of links') %> <select name="LeadingLink">
% foreach ( @link_types ) {
<option value="<% $_ %>" <% ($LeadingLink||'Members') eq $_? 'selected="selected"': '' |n %>><% loc($_) %></option>
% }
</select>

<% loc('maximum depth') %> <select name="MaxDepth">
<option value="0"><% loc('Unlimit') %></option>
% foreach ( 1..6 ) {
<option value="<% $_ %>" <% ($MaxDepth||0) == $_? 'selected="selected"': '' %>><% $_ %></option>
% }
</select><br />

<% loc('Show as well') %>:
% foreach my $type ( @link_types ) {
% my $checked = '';
% $checked = 'checked="checked"' if grep $type eq $_, @ShowLinks;
<input type="checkbox" id="ShowLinks" name="ShowLinks" value="<% $type %>" <% $checked |n %> />
<label for="ShowLinks"><% loc($type) %></label>
% }
<br />

% my @properties = RT::Graph::Tickets->TicketProperties( $session{'CurrentUser'} );

<% loc('Fill boxes with color using') %>:
<select name="FillUsing">
<option value=""><% loc('nothing') %></option>
<%PERL>
my @tmp = @properties;
while ( my ($group, $list) = (splice @tmp, 0, 2) ) {
    # coloring by links and dates sounds stupid
    next if $group eq 'Dates' || $group eq 'Links';

    foreach my $prop ( @$list ) {
        my $selected = '';
        $selected = 'selected="selected"' if $prop eq ($FillUsing||'');
</%PERL>
<option value="<% $prop %>" <% $selected |n %>><% loc($prop) %></option>
% } }
</select><br />

% if ( RT::Link->can('Description' ) ) {
% my $checked = '';
% $checked = 'checked="checked"' if $ShowLinkDescriptions;
<label for="ShowLinkDescriptions"><% loc('Show link descriptions') %>:</label>
<input type="checkbox" id="ShowLinkDescriptions" name="ShowLinkDescriptions" value="1" <% $checked |n %> />
<br />
% }

<%PERL>
for my $i ( 1..($MaxDepth||6) ) {
    my @default;
    if ( my $tmp = $ARGS{ 'Level-'. $i .'-Properties' } ) {
        @default = ref $tmp? @$tmp : ($tmp);
    }

    $m->comp('SELF:Properties',
        Level => $i,
        Available => \@properties,
        Default => \@default,
    );
}
</%PERL>

<& /Elements/Submit, Label => loc('Update Graph'), Name => 'Update' &>

</&>

<%ARGS>
$id => undef
$Direction => 'TB'
$LeadingLink => 'Members'
@ShowLinks => ('MemberOf', 'DependsOn', 'RefersTo')
$MaxDepth => 3
$FillUsing => ''
$ShowLinkDescriptions => 0
</%ARGS>
<%INIT>
require RT::Graph::Tickets;
require RT::Link;

my @link_types = qw(Members MemberOf RefersTo ReferredToBy DependsOn DependedOnBy); #loc_qw
@ShowLinks = grep $_ ne $LeadingLink, @ShowLinks;
</%INIT>

<%METHOD Properties>
<%ARGS>
@Available => ()
@Default   => ()
$Level     => 1,
</%ARGS>
<%INIT>
my $id = "graph-properties-box-$Level";
my $class = '';
$class = 'class="hidden"' if $Level != 1 && !@Default;
</%INIT>
<% loc('Show Tickets Properties on [_1] level', $Level) %>
(<small><a href="#" onclick="hideshow(<% $id |n,j%>); return false;"><% loc('open/close') %></a></small>):
<table id="<% $id %>" <% $class |n %>>
% while ( my ($group, $list) = (splice @Available, 0, 2) ) {
<tr><td><% loc($group) %>:</td><td>
% foreach my $prop ( @$list ) {
% my $checked = '';
% $checked = 'checked="checked"' if grep $_ eq $prop, @Default;
<input type="checkbox" class="checkbox" id="Level-<% $Level %>-Properties" name="Level-<% $Level %>-Properties" value="<% $prop %>" <% $checked |n %> />
<label for="Level-<% $Level %>-Properties"><% loc($prop) %></label>
% }
</td></tr>
% }
</table>
<br />
</%METHOD>
