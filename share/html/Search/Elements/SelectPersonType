%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2022 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<div class="form-row my-0">
  <div class="col-<% $Suffix ? 12 : 6 %>">

<select id="<%$Name%>" name="<%$Name%>" class="form-control selectpicker">
% if ($AllowNull) {
<option value="">-</option>
% }
% for my $option (@types) {
% my ($value, $label) = ($option, $option);
% if (ref($option)) {
%     ($value, $label) = @$option;
% }

%  if ($Suffix) {
<option value="<% $value %><% $Suffix %>"<%$value eq $Default && qq[ selected="selected"] |n %> ><% loc($label) %> <% loc('Group') %></option>
%   next;
%  }
<option value="<%$value%>"<% $value eq $Default && qq[ selected="selected"] |n %> ><% loc($label) %></option>
% }
</select>

  </div>

% if (!$Suffix) {
  <div class="col-6">
%   my $Name = $Name . 'SubType';
    <select id="<%$Name%>" name="<%$Name%>" class="form-control selectpicker">
%   foreach my $subtype (@subtypes) {
      <option value="<%$subtype%>"<% $subtype eq 'EmailAddress' && qq[ selected="selected"] |n %> ><% loc($subtype) %></option>
%   }
    </select>
  </div>
% }

</div>

<%INIT>
my ( @types, @subtypes );
if ( $Class eq 'RT::Assets' ) {
    @types = qw(Owner HeldBy Contact);
    @subtypes = @{ $RT::Assets::SEARCHABLE_SUBFIELDS{'User'} };

}
else {
   if ($Role) {
       @types = (
          [ "CustomRole.{" . $Role->Name . "}", $Role->Name ],
       );
   }
   elsif (@Roles) {
      @types = map { [ "CustomRole.{" . $_->Name . "}", $_->Name ] } @Roles;
   }
   elsif ($Scope =~ /queue/) {
      @types = qw(Cc AdminCc);
   }
   elsif ($Suffix eq 'Group') {
      @types = qw(Owner Requestor Cc AdminCc Watcher);
   }
   else {
      @types = qw(Requestor Cc AdminCc Watcher Owner QueueCc QueueAdminCc QueueWatcher);

      my $CustomRoles = RT::CustomRoles->new( $session{'CurrentUser'});
      foreach my $id (keys %Queues) {
          my $queue = RT::Queue->new($session{'CurrentUser'});
          $queue->Load($id);
          next unless $queue->Id;
          $CustomRoles->LimitToObjectId($queue->Id);
      }
      $m->callback(
          CallbackName => 'MassageCustomRoles',
          CustomRoles  => $CustomRoles,
      );
      push @types, map { [ "CustomRole.{" . $_->Name . "}", $_->Name ] } @{ $CustomRoles->ItemsArrayRef };
   }

    @subtypes = @{ $RT::Tickets::SEARCHABLE_SUBFIELDS{'User'} };
}

$m->callback(Types => \@types, Subtypes => \@subtypes);

</%INIT>
<%ARGS>
$AllowNull => 1
$Suffix => ''
$Default=>undef
$Class => 'RT::Tickets'
$Scope => $Class eq 'RT::Assets' ? 'asset' : 'ticket'
$Name => 'WatcherType'
$Role => undef
@Roles => ()
%Queues => ()
</%ARGS>
