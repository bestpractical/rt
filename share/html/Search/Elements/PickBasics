%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% foreach( @lines ) {
<& ConditionRow, Condition => $_ &>
% }
<%INIT>

my @lines = (
    {
        Name => 'id',
        Field => loc('id'),
        Op => {
            Type => 'component',
            Path => '/Elements/SelectEqualityOperator',
        },
        Value => { Type => 'text', Size => 5 }
    },
    {
        Name => 'Attachment',
        Field => {
            Type => 'component',
            Path => '/Elements/SelectAttachmentField',
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectBoolean',
            Arguments => {
                True => loc("matches"), 
                False => loc("doesn't match"), 
                TrueVal => 'LIKE',
                FalseVal => 'NOT LIKE',
            },
        },
        Value => { Type => 'text', Size => 20 },
    },
    {
        Name => 'Queue',
        Field => loc('Queue'),
        Op => {
            Type => 'component',
            Path => '/Elements/SelectBoolean',
            Arguments => { TrueVal=> '=', FalseVal => '!=' },
        },
        Value => {
            Type => 'component',
            Path => '/Elements/SelectQueue',
            Arguments => { NamedValues => 1, },
        },
    },
    {
        Name => 'Status',
        Field => loc('Status'),
        Op => {
            Type => 'component',
            Path => '/Elements/SelectBoolean',
            Arguments => { TrueVal=> '=', FalseVal => '!=' },
        },
        Value => {
            Type => 'component',
            Path => '/Ticket/Elements/SelectStatus',
            Arguments => { SkipDeleted => 1, Queues => \%queues },
        },
    },
    {
        Name => 'Actor',
        Field => {
            Type    => 'select',
            Options => [
                Owner => loc('Owner'),
                Creator => loc('Creator'),
                LastUpdatedBy => loc('Last updated by'),
                UpdatedBy => loc('Updated by'),
            ],
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectBoolean',
            Arguments => { TrueVal=> '=', FalseVal => '!=' },
        },
        Value => {
            Type => 'component',
            Path => '/Elements/SelectOwner',
            Arguments => { ValueAttribute => 'Name', Queues => \%queues },
        },
    },
    {
        Name => 'Watcher',
        Field => {
            Type => 'component',
            Path => 'SelectPersonType',
            Arguments => { Default => 'Requestor' },
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectMatch',
        },
        Value => { Type => 'text', Size => 20 }
    },
    {
        Name => 'WatcherGroup',
        Field => {
            Type => 'component',
            Path => 'SelectPersonType',
            Arguments => { Default => 'Owner', Suffix => 'Group' },
        },
        Op => {
            Type => 'select',
            Options => [ '=' => loc('is') ],
        },
        Value => { Type => 'text', Size => 20, "data-autocomplete" => "Groups" }
    },
    {
        Name => 'Date',
        Field => {
            Type => 'component',
            Path => '/Elements/SelectDateType',
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectDateRelation',
        },
        Value => {
            Type => 'component',
            Path => '/Elements/SelectDate',
            Arguments => { ShowTime => 0, Default => '' },
        },
    },
    {
        Name => 'Time',
        Field => {
            Type    => 'select',
            Options => [
                TimeWorked => loc('Time Worked'),
                TimeEstimated => loc('Time Estimated'),
                TimeLeft => loc('Time Left'),
            ],
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectEqualityOperator',
        },
        Value => [
            { Type => 'text', Size => 5 },
            {
                Type => 'component',
                Path => '/Elements/SelectTimeUnits',
            },
        ],
    },
    {
        Name => 'Priority',
        Field => {
            Type    => 'select',
            Options => [
                Priority => loc('Priority'),
                InitialPriority => loc('Initial Priority'),
                FinalPriority => loc('Final Priority'),
            ],
        },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectEqualityOperator',
        },
        Value => {
            Type => 'component',
            Path => '/Elements/SelectPriority',
        },
    },
    {
        Name => 'Links',
        Field => { Type => 'component', Path => 'SelectLinks' },
        Op => {
            Type => 'component',
            Path => '/Elements/SelectBoolean',
            Arguments => { TrueVal=> '=', FalseVal => '!=' },
        },
        Value => { Type => 'text', Size => 5 }
    },
);

$m->callback( Conditions => \@lines );

</%INIT>
<%ARGS>
%queues => ()
</%ARGS>
