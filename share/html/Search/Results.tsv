%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2022 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$Format => undef
$Query => ''
$OrderBy => 'id'
$Order => 'ASC'
$PreserveNewLines => 0
$UserData => 0
$Class => 'RT::Tickets'
$ObjectType => $Class eq 'RT::Transactions' ? 'RT::Ticket' : ''
</%ARGS>
<%INIT>
my $collection = $Class->new( $session{'CurrentUser'} );

my @limits;

if ( $Class eq 'RT::Transactions' ) {
    @limits = ( "ObjectType = '$ObjectType'", "($Query)" );
    if ( $ObjectType eq 'RT::Ticket' ) {
        unshift @limits, "TicketType = 'ticket'";
    }
}
else {
    push @limits, $Query;
}

if ( $Query ) {
    $collection->FromSQL( join ' AND ', @limits );
}
elsif ( $Class eq 'RT::Assets' ) {
    my $catalog_obj = LoadDefaultCatalog($ARGS{'Catalog'} || '');
    $ARGS{'Catalog'} = $catalog_obj->Id;
    ProcessAssetsSearchArguments(
        Assets => $collection, Catalog => $catalog_obj, ARGSRef => \%ARGS,
    );
}

if ( $OrderBy =~ /\|/ ) {
    # Multiple Sorts
    my @OrderBy = split /\|/, $OrderBy;
    my @Order   = split /\|/, $Order;
    $collection->OrderByCols(
        map { { FIELD => $OrderBy[$_], ORDER => $Order[$_] } }
        ( 0 .. $#OrderBy )
    );
}
else {
    $collection->OrderBy( FIELD => $OrderBy, ORDER => $Order );
}

if ( $Class eq 'RT::Assets' && !$Format ) {
    $Format = q|id, Name, Description, Status, Catalog, |;
    $Format .= "$_, " for RT::Asset->Roles;
    my $catalog_obj = LoadDefaultCatalog($ARGS{'Catalog'} || '');
    my $CFs = RT::CustomFields->new( $session{CurrentUser} );
    $CFs->LimitToCatalog( $catalog_obj->Id );
    $CFs->LimitToObjectId( 0 ); # LimitToGlobal but no LookupType restriction
    $Format .= "'__CF.{$_}__/TITLE:$_', " for map {$_ = $_->Name; s/['\\]/\\$1/g; $_} @{$CFs->ItemsArrayRef};
}

$m->callback(CallbackName => "ModifyFormat", Format => \$Format );

my $filename = $UserData ? 'UserTicketData.tsv' : undef;
$m->comp( "/Elements/TSVExport", Collection => $collection, Format => $Format, PreserveNewLines => $PreserveNewLines, Filename => $filename );
</%INIT>
