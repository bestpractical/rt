%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%args>
$Context
$Principals
$AddPrincipal => undef
</%args>
<%init>
# Let callbacks get at principals and context before we do anything with them
$m->callback( Principals => $Principals, Context => $Context );

# Try to detect if we want to include an add user/group box
unless ( $AddPrincipal ) {
    my $last = $Principals->[-1];
    if ( $last->[0] =~ /Groups/i ) {
        $AddPrincipal = 'group'; # loc
    }
    elsif ( $last->[0] =~ /Users/i ) {
        $AddPrincipal = 'user'; # loc
    }
}

my $anchor = $DECODED_ARGS->{Anchor} || '';
if ($anchor =~ /AddPrincipal/) {
    for my $type ("group", "user") {
        my $record = _ParseACLNewPrincipal($DECODED_ARGS, $type)
            or next;
        if ($record->PrincipalId) {
            $anchor = "#acl-" . $record->PrincipalId;
            last;
        }
    }
}
</%init>
%# Principals is an array of arrays, where the inner arrays are like:
%#      [ 'Category name' => $CollectionObj => 'DisplayColumn' => 1 ]
%# The last value is a boolen determining if the value of DisplayColumn
%# should be loc()-ed before display.

<script type="text/javascript">
  jQuery(function() {
      function sync_anchor(hash) {
          if (!hash.length) return;
          window.location.hash = hash;
          jQuery(".rights-editor input[name=Anchor]").val(hash);
      }
      sync_anchor(<% $anchor |n,j %>);

      jQuery(".rights-editor").tabs({
          beforeActivate: function(ev, ui) {
              sync_anchor(ui.newPanel.selector);
              if ( ui.newTab.find('input[type=text]').size() > 0 ) {
                  ui.newTab.find('input[type=text]:first').focus();
              }
          }
      });

      jQuery(".rights-editor .category-tabs").tabs({
          active: jQuery.cookie('rights-category-tab') || 0,
          activate: function(ev, ui) {
              jQuery.cookie('rights-category-tab', ui.newTab.index());
              jQuery(".rights-editor .category-tabs").not(this).each(function() {
                  var item     = jQuery(this);
                  var selected = item.tabs("option", "active") || 0;
                  if (selected != ui.newTab.index())
                      item.tabs("option", "active", ui.newTab.index());
              });
          }
      });
  });
</script>

<div class="rights-editor clearfix">
  <input type="hidden" value="" name="Anchor" />

  <ul>
<%perl>
for my $category (@$Principals) {
    my ($name, $collection, $col, $loc) = @$category;
</%perl>
<li class="category"><% loc($name) %></li>
<%perl>
    while ( my $obj = $collection->Next ) {
        my $display = ref $col eq 'CODE' ? $col->($obj) : $obj->$col;
        my $id = "acl-" . $obj->PrincipalId;
</%perl>
<li><a href="#<% $id %>"><% $loc ? loc($display) : $display %></a></li>
<%perl>
    }
}
</%perl>
% if ( $AddPrincipal ) {
    <li class="category"><&|/l, loc($AddPrincipal) &>Add [_1]</&></li>
    <li class="addprincipal">
      <a href="#acl-AddPrincipal">
        <input type="text" value=""
            data-autocomplete="<% lc $AddPrincipal eq 'user' ? 'Users' : 'Groups' %>"
% if ( lc $AddPrincipal eq 'user' ) {
            data-autocomplete-return="Name"
            data-autocomplete-privileged="1"
% }
               name="AddPrincipalForRights-<% lc $AddPrincipal %>"
               id="AddPrincipalForRights-<% lc $AddPrincipal %>" />
        <script type="text/javascript">
        jQuery(function() {
            jQuery("#AddPrincipalForRights-"+<% lc $AddPrincipal |n,j%>).keyup(function(){
                toggle_addprincipal_validity(this, true);
            }).keydown(function(event){
                event.stopPropagation() // Disable tabs keyboard nav
            });

            jQuery("#AddPrincipalForRights-"+<% lc $AddPrincipal |n,j%>).on("autocompleteselect", addprincipal_onselect);
            jQuery("#AddPrincipalForRights-"+<% lc $AddPrincipal |n,j%>).on("autocompletechange", addprincipal_onchange);
        });
        </script>
% my $type = lc $AddPrincipal eq 'user' ? loc('username') : loc($AddPrincipal);
        <span class="warning"><&|/l, $type &>Invalid [_1]</&></span>
      </a>
    </li>
% }
  </ul>

<%perl>
# Now generate our rights panels for each principal
for my $category (@$Principals) {
    my ($name, $collection, $col, $loc) = @$category;
    while ( my $obj = $collection->Next ) {
        my $display = ref $col eq 'CODE' ? $col->($obj) : $obj->$col;
        my $id = "acl-" . $obj->PrincipalId;
</%perl>

  <div id="<% $id %>">
    <h3>
      <% $loc ? loc($display) : $display %>
<%perl>
if ($obj->isa('RT::Group') and $obj->Domain eq 'UserDefined') {
    my $subgroups = $obj->GroupMembersObj( Recursively => 1 );
    $subgroups->LimitToUserDefinedGroups;
    $subgroups->Limit( FIELD => 'Name', OPERATOR => '!=', VALUE => $obj->Name, CASESENSITIVE => 0 );

    if ( $subgroups->Count ) {
        my $inc = join ", ", map $_->Name, @{$subgroups->ItemsArrayRef};
</%perl>
      <span class="subgroups"><&|/l, $inc &>includes [_1]</&></span>\
<%perl>
    }
}
</%perl>
    </h3>
    <& EditRightsCategoryTabs, Context => $Context, Principal => $obj, id => $id &>
  </div>
<%perl>
    }
}

if ( $AddPrincipal ) {
</%perl>
  <div id="acl-AddPrincipal">
    <h3><&|/l, loc($AddPrincipal) &>Add rights for this [_1]</&></h3>
    <& EditRightsCategoryTabs, Context => $Context, id => 'acl-AddPrincipal' &>
  </div>
% }

</div>
