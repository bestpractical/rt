%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2016 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<& /Elements/ListActions, actions => \@actions &>

<form method="get" action="Templates.html">
<input type="hidden" class="hidden" name="id" value="<% $id %>" />

% unless ( $Templates->Count ) {
<p><i><&|/l&>(No templates)</&></i></p>
% } else {


<& /Elements/CollectionList,
    OrderBy       => 'id',
    Order         => 'ASC',
    Rows          => $Rows,
    %ARGS,
    DisplayFormat => '__CheckBox.{DeleteTemplates}__,'. $Format,
    Format        => $Format,
    Collection    => $Templates,
    AllowSorting  => 1,
    PassArguments => [qw(Format Rows Page Order OrderBy FindDisabledQueues)],
&>

<i><&|/l&>(Check box to delete)</&></i>
% }

<& /Elements/Submit, Label => loc('Delete Template') &>
</form>

<%INIT>
$Format ||= RT->Config->Get('AdminSearchResultFormat')->{'Templates'};
my $Rows = RT->Config->Get('AdminSearchResultRows')->{'Templates'} || 50;

my $QueueObj = RT::Queue->new( $session{'CurrentUser'} );
$QueueObj->Load( $id ) if $id;

my $Templates = RT::Templates->new($session{'CurrentUser'});
if ( $QueueObj->id ) {
    $Templates->LimitToQueue( $id );
}
else {
    $Templates->LimitToGlobal;
}

# Now let callbacks add their extra limits
$m->callback( %ARGS, Templates => $Templates );
$Templates->RedoSearch;

# deal with deleting existing templates
my @actions;
# backwards compatibility, use DeleteTemplates array for this
foreach my $key (keys %ARGS) {
    next unless $key =~ /^DeleteTemplate-(\d+)/;
    push @DeleteTemplates, $1;
}

foreach my $id( @DeleteTemplates ) {
    my $TemplateObj = RT::Template->new( $session{'CurrentUser'} );
    $TemplateObj->Load( $id );
    unless ( $TemplateObj->id ) {
        push @actions, loc("Couldn't load template #[_1]", $id);
        next;
    }

    my ($retval, $msg) = $TemplateObj->Delete;
    if ( $retval ) {
        push @actions, loc("Template #[_1] deleted", $id);
    }
    else {
        push @actions, $msg;
    }
}
</%INIT>
<%ARGS>
$id => 0

$Format => undef

@DeleteTemplates => ()
</%ARGS>
