%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2023 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%init>
my $TicketObj = RT::Ticket->new($session{CurrentUser});
$TicketObj->Load($ARGS{id});
$m->abort unless $TicketObj->id && $ARGS{UpdateType};

$m->abort unless $TicketObj->CurrentUserHasRight('ShowOutgoingEmail');
if ( $ARGS{UpdateType} eq 'private' ) {
    $m->abort
      unless $TicketObj->CurrentUserHasRight( 'CommentOnTicket' ) || $TicketObj->CurrentUserHasRight( 'ModifyTicket' );
}
else {
    $m->abort
      unless $TicketObj->CurrentUserHasRight( 'ReplyToTicket' ) || $TicketObj->CurrentUserHasRight( 'ModifyTicket' );
}

my @dryrun = $TicketObj->DryRun(
    sub {
        local $ARGS{UpdateContent} ||= "Content";
        ProcessUpdateMessage(ARGSRef  => \%ARGS, TicketObj => $TicketObj );
        ProcessTicketWatchers(ARGSRef => \%ARGS, TicketObj => $TicketObj );
        ProcessTicketBasics(  ARGSRef => \%ARGS, TicketObj => $TicketObj );
        ProcessTicketLinks(   ARGSRef => \%ARGS, TicketObj => $TicketObj );
        ProcessTicketDates(   ARGSRef => \%ARGS, TicketObj => $TicketObj );
        ProcessObjectCustomFieldUpdates(ARGSRef => \%ARGS, Object => $TicketObj );
        ProcessTicketReminders( ARGSRef => \%ARGS, TicketObj => $TicketObj );
    }
);
my %recips;
$m->abort unless @dryrun;

my %squelched = ProcessTransactionSquelching( \%ARGS );
my $squelched_config = !( RT->Config->Get('SquelchedRecipients', $session{'CurrentUser'}) );
my %submitted;
$submitted{$_} = 1 for split /,/, $ARGS{TxnRecipients};
</%init>
<p>
<&|/l, RT->Config->Get('WebPath')."/Ticket/ModifyPeople.html?id=".$TicketObj->Id,
&>Uncheck boxes to disable notifications to the listed recipients <b>for this transaction only</b>; persistent squelching is managed on the <a href="[_1]">People page</a>.</&>
</p>

% my @scrips = grep {$_->ActionObj->Action->isa('RT::Action::SendEmail')}
%              map {@{$_->Scrips->Prepared}} @dryrun;
% if (@scrips) {
%   if ( grep {
%          my $s = $_;
%          my $action = $s->ActionObj->Action;
%          scalar(map { $action->$_ } qw(To Cc Bcc))
%        } @scrips ) {
<div class="custom-control custom-checkbox">
  <input type="checkbox" id="TxnSendMailToAll" name="TxnSendMailToAll" <% $ARGS{TxnSendMailToAll} ? 'checked="checked"' : ''  %> value="1" class="custom-control-input">
  <label class="custom-control-label" for="TxnSendMailToAll"><b><% loc('All recipients') %></b></label><br />
</div>
%   }
%     for my $scrip (@scrips) {
          <b><% $scrip->Description || loc('Scrip #[_1]',$scrip->id) %></b><br />
          <&|/l, loc($scrip->ConditionObj->Name), loc($scrip->ActionObj->Name), loc($scrip->Template)&>[_1] [_2] with template [_3]</&>
          <br />
%         for my $type (qw(To Cc Bcc)) {
%             my $action = $scrip->ActionObj->Action;
%             my @addresses =  $action->$type();
%             next unless @addresses;
              <ul class="list-group list-group-compact">
%             for my $addr (@addresses) {
                  <li class="list-group-item">
%                 my $checked = $submitted{$addr->address} ? not $squelched{$addr->address} : $squelched_config;
%                 $m->callback(CallbackName => 'BeforeAddress', Ticket => $TicketObj, Address => $addr, Type => $type, Checked => \$checked);
                    <div class="form-row">
                      <div class="col-auto">
                        <b><%loc($type)%></b>:
                      </div>
                      <div class="col-auto">
%                 my $show_checkbox = 1;
%                 if ( grep {$_ eq $addr->address} @{$action->{NoSquelch}{$type}} ) {
%                     $show_checkbox = 0;
%                 }
                        <div class="custom-control custom-checkbox">
%                 if ( $show_checkbox ) {
%                     $recips{$addr->address}++;
                          <input type="checkbox" class="custom-control-input" name="TxnSendMailTo" <% $checked ? 'checked="checked"' : '' |n%> value="<%$addr->address%>" id="TxnSendMailTo-<% $addr->address %>-<% $recips{$addr->address} %>" />
%                 }
                          <label <% $show_checkbox ? 'class="custom-control-label"' : '' |n%>
%                         if ( $show_checkbox ) {
                            for="TxnSendMailTo-<% $addr->address %>-<% $recips{$addr->address} %>"
%                         }
                          ><& /Elements/ShowUser, Address => $addr &></label>
%                 $m->callback(CallbackName => 'AfterAddress', Ticket => $TicketObj, Address => $addr, Type => $type);
%                 unless ( $show_checkbox ) {
%                     if ( $type eq 'Cc' ) {
                          (<&|/l&>explicit one-time Cc</&>)
%                     }
%                     else {
                          (<&|/l&>explicit one-time Bcc</&>)
%                     }
%                 }
                        </div>
                      </div>
                    </div>
                  </li>
%             }
              </ul>
%         }
%         if (RT->Config->Get('PreviewScripMessages')) {
              <textarea class="form-control" cols="80" rows="5"><% Encode::decode( "UTF-8", $scrip->ActionObj->Action->TemplateObj->MIMEObj->as_string )%></textarea>
%         }
          <br />
%     }
% }

% $m->callback( CallbackName => 'AfterRecipients', TicketObj => $TicketObj );

<input type="hidden" name="TxnRecipients" value="<% join ",",sort keys %recips %>" />
% $m->abort();
