%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2024 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% if ( $valid_cfs ) {
<& /Views/Component/QuickCreate &>
% } else {
% # Pass %ARGS on failure to repopulate the form
<& /Views/Component/QuickCreate, %ARGS &>
% }
% $m->abort; # No footer
<%init>
my $skip_create = 0;
my $valid_cfs;
my @results;

$m->callback( ARGSRef => \%ARGS, results => \@results, CallbackName => 'Initial',
              skip_create => \$skip_create );

if ( $ARGS{'QuickCreateSubmit'} ) {

    # Run with the default ValidateUnsubmitted => 0, which means it will check
    # only submitted values. If it fails, it's on the page and they didn't
    # select a value.
    # ProcessQuickCreate will then check ValidateUnsubmitted => 1 and redirect
    # to ticket Create.html to show values not available on Quick Create.

    my $QueueObj = RT::Queue->new($session{'CurrentUser'});
    my ( $ok, $msg ) = $QueueObj->Load($ARGS{Queue});

    if ( $ok && $QueueObj->Id ) {
        my $CFs = $QueueObj->TicketCustomFields;
        my @msg;

        ($valid_cfs, @msg) = $m->comp(
            '/Elements/ValidateCustomFields',
            CustomFields        => $CFs,
            ARGSRef             => \%ARGS,
        );

        unless ( $valid_cfs ) {
            push @results, @msg;
            $skip_create = 1;
        }
    }
    else {
        push @results, loc("Queue could not be loaded.");
        $skip_create = 1;
    }

    unless ( $skip_create ) {
        push @results, ProcessQuickCreate( ARGSRef => \%ARGS );
    }

    $r->headers_out->{'HX-Trigger'} = JSON(
        {
            actionsChanged => \@results
        },
        ascii => 1,
    ) if @results;

}

</%init>
<%args>
</%args>
