#!@PERL@
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2023 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
use strict;
use warnings;

# fix lib paths, some may be relative
BEGIN { # BEGIN RT CMD BOILERPLATE
    require File::Spec;
    require Cwd;
    my @libs = ("@RT_LIB_PATH@", "@LOCAL_LIB_PATH@");
    my $bin_path;

    for my $lib (@libs) {
        unless ( File::Spec->file_name_is_absolute($lib) ) {
            $bin_path ||= ( File::Spec->splitpath(Cwd::abs_path(__FILE__)) )[1];
            $lib = File::Spec->catfile( $bin_path, File::Spec->updir, $lib );
        }
        unshift @INC, $lib;
    }

}

my %OPT = (
    users  => 1,
    groups => 1,
);
use RT::Interface::CLI qw(Init);
Init(
    \%OPT,
    'debug',
    'import',
    'users!', 'groups!');

eval { require RT::LDAPImport; 1; } or do {
    print "Unable to run rt-ldapimport without dependencies.\n";
    print "Rerun configure with the --enable-externalauth option.\n";
    exit 0;
};

my $importer = RT::LDAPImport->new;

if ($OPT{import}) {
    if ($OPT{users}) {
        print "Starting import\n";
        $importer->import_users(import => 1);
    }
    if ($OPT{groups}) {
        print "Starting group import\n";
        $importer->import_groups(import => 1);
    }
    print "Finished import\n";
} else {
    print <<TESTING;
Running test import, no data will be changed
Rerun command with --import to perform the import
Rerun command with --verbose for more information
TESTING
    $importer->import_users if $OPT{users};
    if ($OPT{groups}) {
        print "Testing group import\n";
        $importer->import_groups();
    }
    print "Finished test\n";
}

__END__

=head1 NAME

rt-ldapimport - Import users and groups from external sources

=head1 SYNOPSIS

  rt-ldapimport [--import]

=head1 DESCRIPTION

See L<RT::LDAPImport> for configuration instructions.

=head1 OPTIONS

=over

=item C<--import>

Without this flag, merely does a dry-run of the import.

=item C<--verbose>

Log more data when importing.

=item C<--no-users>

Skip user import.

=item C<--no-groups>

Skip group import.

=back

=cut
